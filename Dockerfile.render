# Render 平台最佳化 Dockerfile (多階段構建)

# --- 階段 1: 構建環境 ---
FROM python:3.13-slim as builder

# 1. 設定工作目錄
WORKDIR /app

# 2. 安裝系統依賴
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# 3. 升級 pip 與安裝構建工具
RUN pip install --upgrade pip wheel setuptools

# 4. 複製需求檔案並安裝
COPY requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt

# --- 階段 2: 生產環境 ---
FROM python:3.13-slim

# 1. 設定工作目錄
WORKDIR /app

# 2. 安裝必要的系統依賴
RUN apt-get update && apt-get install -y --no-install-recommends \
    libjpeg-dev \
    zlib1g-dev \
    && rm -rf /var/lib/apt/lists/*

# 3. 從構建環境複製已安裝的套件
COPY --from=builder /usr/local/lib/python3.13/site-packages /usr/local/lib/python3.13/site-packages

# 4. 複製應用程式碼
COPY . .

# 5. 設定環境變數
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    TZ=Asia/Taipei

# 6. 權限最佳化
RUN useradd -m appuser && chown -R appuser /app
USER appuser

# 7. 暴露應用埠
EXPOSE $PORT

# 8. 預設啟動命令
CMD gunicorn "app:create_app()" \
    --bind 0.0.0.0:$PORT \
    --workers 2 \
    --timeout 60 \
    --keep-alive 5 \
    --max-requests 2000 \
    --max-requests-jitter 200
